require('imager')
plant<- load.image('~/Documents/PHD/imageprocessing/IMG_1902.jpg')
dim(plant)
plot(plant)
cl <- color.at(plant,598,232)
plot(c1)
c1
plot(cl)
cmp <- imfill(dim=dim(plant),val=cl)
#Blur, compare, split across channels, compute Euclidean norm
d <- isoblur(plant,2) %>% { . - cmp } %>% imsplit("c") %>% enorm
plot(d,main="Distance map")
points(598,232,col="red")
msk <- px.flood(plant,100,100,sigma=.28) %>% as.cimg
plot(plant*msk)
test<-plant
test[[2]]
dim(test)
channels(test)
blah <- channels(test,1:3)
blah[[1]]
plot(blah[[1]])
plot(blah[[2]])
?load.image
imshift(plant,0,50) %>% plot
imshift(plant,50,0) %>% plot
map_il(2:4,~ imresize(plant,1/.)) %>% imappend("x") %>% plot
imresize(i,1/4) %>% imappend("x") %>% plot #Quarter size
imresize(plant,1/4) %>% imappend("x") %>% plot #Quarter size
#Rotate
imrotate(plant,30) %>% plot
knitr::opts_chunk$set(echo = TRUE)
```{r cars}
require(ggplot2)
require('imager')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#require(ggplot2)
require('imager')
plant<- load.image('~/Documents/PHD/imageprocessing/burseragrav1.jpg .jpg')
plant<- load.image('~/Documents/PHD/imageprocessing/burseragrav1.jpg')
dim(plant)
plot(pressure)
plot(plant)
install.packages("RefManageR")
set.wd('~/Documents/GitHub/syllabi/')
setwd('~/Documents/GitHub/syllabi/')
rm(list=ls())
require('imager')
plant<- load.image('~/Documents/PHD/imageprocessing/IMG_1902.jpg')
plant<- load.image('~/Documents/GitHub/PhD//imageprocessing/IMG_1902.jpg')
msk <- px.flood(plant,100,100,sigma=.28) %>% as.cimg
plot(plant*msk)
plant<- load.image('~/Documents/GitHub/PhD//imageprocessing/burseragrav1.jpg')
msk <- px.flood(plant,100,100,sigma=.28) %>% as.cimg
plot(plant*msk)
plot(plant)
?px.flood
msk <- px.flood(plant,400,900,sigma=.28) %>% as.cimg
plot(plant*msk)
plot(msk)
plot(-1*msk)
plot((-1*msk)*plant)
plot(msk*plant)
dim(msk)
msk %>%as.data.frame%>%head
inv<- msk %>%as.data.frame
inv$value<- as.numeric(inv$value>0)
inv$value<- as.numeric(inv$value==0)
msk<- inv %>% as.cimg()
plot(msk*plant)
source('~/Documents/GitHub/PhD/imageprocessing/images.R')
knitr::opts_chunk$set(echo = TRUE)
indicatorMatrix <-function( test,xrange,yrange,types)
{
if(types=='RBG'){
newtest<- test %>% as.data.frame} else{newtest<-RGBtoHSV(test) %>% as.data.frame}
dfnew<-subset(newtest, x%in%xrange & y%in%yrange) %>%  group_by(cc) %>% summarize( SD = sd(value, na.rm=TRUE),Mean = mean(value, na.rm=TRUE))
tmp<-subset(newtest,cc==1)
tmp$value<-as.numeric( between (newtest$value[newtest$cc==1] , unlist(dfnew[1,3]-dfnew[1,2]), unlist(dfnew[1,3]+dfnew[1,2]) ) & between ( newtest$value[newtest$cc==2 ] , unlist(dfnew[2,3]-dfnew[2,2]), unlist(dfnew[2,3]+dfnew[2,2]))
& between ( newtest$value[newtest$cc==3] , unlist(dfnew[3,3]-dfnew[3,2]), unlist(dfnew[3,3]+dfnew[3,2])))
newtest$value<- rep(tmp$value,3) *newtest$value
tester<- newtest %>% as.cimg
return(list(tester,tmp,dfnew))
}
samplemat3<- indicatorMatrix(plant,100:200 ,850:950,'RBG')
library(plyr)
library(imager)
samplemat3<- indicatorMatrix(plant,100:200 ,850:950,'RBG')
library('dplyr')
install.packages('dplyr')
#require(ggplot2)
require('imager')
require('dplyr')
install.packages()
install.packages(dplyr)
install.packages('dplyr')
install.packages("dplyr")
install.packages('dplyr')
install.packages("Rcpp", dependencies=TRUE)
install.packages('mice')
knitr::opts_chunk$set(echo = TRUE)
grayscale(plant) %>% plot
library('plyr')
grayscale(plant) %>% plot
library(magrittr)
indicatorMatrix <-function( test,xrange,yrange,types)
{
if(types=='RBG'){
newtest<- test %>% as.data.frame} else{newtest<-RGBtoHSV(test) %>% as.data.frame}
dfnew<-subset(newtest, x%in%xrange & y%in%yrange) %>%  group_by(cc) %>% summarize( SD = sd(value, na.rm=TRUE),Mean = mean(value, na.rm=TRUE))
tmp<-subset(newtest,cc==1)
tmp$value<-as.numeric( between (newtest$value[newtest$cc==1] , unlist(dfnew[1,3]-dfnew[1,2]), unlist(dfnew[1,3]+dfnew[1,2]) ) & between ( newtest$value[newtest$cc==2 ] , unlist(dfnew[2,3]-dfnew[2,2]), unlist(dfnew[2,3]+dfnew[2,2]))
& between ( newtest$value[newtest$cc==3] , unlist(dfnew[3,3]-dfnew[3,2]), unlist(dfnew[3,3]+dfnew[3,2])))
newtest$value<- rep(tmp$value,3) *newtest$value
tester<- newtest %>% as.cimg
return(list(tester,tmp,dfnew))
}
samplemat3<- indicatorMatrix(plant,100:200 ,850:950,'RBG')
newtest<- test %>% as.data.frame
types='RBG'
head(newtest)
imshift(plant,0,50) %>% plot
#require(ggplot2)
require('imager')
require('plyr')
library('magrittr')
plot(plant)
newtest<- test %>% as.data.frame}
newtest<- test %>% as.data.frame
samplemat3<- indicatorMatrix(plant,100:200 ,850:950,'RBG')
install.packages("mice")
install.packages("~/Downloads/dplyr_0.8.1.tgz", repos = NULL, type = .Platform$pkgType)
library(dplyr)
library(dplyr)
install.packages('RCPP')
install.packages('Rcpp')
install.packages("Rcpp")
library('dplyr')
knitr::opts_chunk$set(echo = TRUE)
require('imager')
require('dplyr')
library('magrittr')
indicatorMatrix <-function( test,xrange,yrange,types)
{
if(types=='RBG'){
newtest<- test %>% as.data.frame} else{newtest<-RGBtoHSV(test) %>% as.data.frame}
dfnew<-subset(newtest, x%in%xrange & y%in%yrange) %>%  group_by(cc) %>% summarize( SD = sd(value, na.rm=TRUE),Mean = mean(value, na.rm=TRUE))
tmp<-subset(newtest,cc==1)
tmp$value<-as.numeric( between (newtest$value[newtest$cc==1] , unlist(dfnew[1,3]-dfnew[1,2]), unlist(dfnew[1,3]+dfnew[1,2]) ) & between ( newtest$value[newtest$cc==2 ] , unlist(dfnew[2,3]-dfnew[2,2]), unlist(dfnew[2,3]+dfnew[2,2]))
& between ( newtest$value[newtest$cc==3] , unlist(dfnew[3,3]-dfnew[3,2]), unlist(dfnew[3,3]+dfnew[3,2])))
newtest$value<- rep(tmp$value,3) *newtest$value
tester<- newtest %>% as.cimg
return(list(tester,tmp,dfnew))
}
samplemat3<- indicatorMatrix(plant,100:200 ,850:950,'RBG')
version
knitr::opts_chunk$set(echo = TRUE)
ff <- FFT(plant)
require('imager')
require('plyr')
require('magrittr')
between<-function(x,y,z){ return(x>=y & x<=z)}
ff <- FFT(plant)
a=ff %>% as.data.frame
head(ff)
head(ff$real)
head(ff$image)
head(ff$imag)
blah <-ff$imag
bw <- plant %>% greyscale
bw <- plant %>% grayscale
ff <- FFT(bq)
ff <- FFT(bw)
knitr::opts_chunk$set(echo = TRUE)
bw <- plant %>% grayscale
knitr::opts_chunk$set(echo = TRUE)
#   a = ft.fft2(A)
## c = a %*% b
#    C = ft.ifft2( c )
#   C = ft.fftshift(C)
#  return C
#}
#bw <- plant %>% grayscale
#ff <- FFT(bw)
#a=ff %>% as.data.frame
#plot(ff$real,main="Real part of the transform")
gray<- samplemat3[[1]] %>%grayscale
